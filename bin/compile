#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e
BIN_DIR=$(cd $(dirname $0)/; pwd)
. $BIN_DIR/util/common.sh

# parse args
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
LOG_FILE='/tmp/commandbox-build-log.txt'

export_env_dir $ENV_DIR

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java
. /tmp/jvm-common/opt/jdbc.sh
install_java_with_overlay ${BUILD_DIR}

mkdir -p $CACHE_DIR

status "Installing CommandBox"

#su apt-key adv --keyserver keys.gnupg.net --recv 6DA70622
#echo "deb http://integration.stg.ortussolutions.com/artifacts/debs/noarch /" | su tee -a /etc/apt/sources.list.d/commandbox.list
#su apt-get update 
#su apt-get --assume-yes install commandbox

curl --location 'https://www.ortussolutions.com/parent/download/commandbox/type/bin' -o /tmp/box.zip
mkdir /tmp/bin
export PATH=$PATH:/tmp/bin
unzip /tmp/box.zip -d /tmp/bin
chmod +x /tmp/bin/box

COMMANDBOX_VERSION="$(box version)"

status "$COMMANDBOX_VERSION successfully installed"

# change to build directory to handle ComandBox Startup
cd $BUILD_DIR

export PORT=${PORT:-$(( $RANDOM+1024 ))}

box server set web.http.port=$PORT
box server set openbrowser=false

mkdir $BP_DIR/vendor
mkdir $BP_DIR/vendor/bin
VBIN=$BP_DIR/vendor/bin

cp $BIN_DIR/start.sh $VBIN/
chmod +x $VBIN/start.sh
